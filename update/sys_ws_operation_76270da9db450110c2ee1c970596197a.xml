<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // get value from the user_name path param
    var sRequestUser = request.pathParams.user_name;

    // get value of the ni_query
    var sRequestNeedItQuery = request.queryParams.ni_query;

    // Query the sys_user table to get the user record for the passed in user
    var oRequestedUserName = new GlideRecord('sys_user');
    oRequestedUserName.get('user_name', sRequestUser);

    // get count of active NeedIt table records where the userr from the user_name parameter is the Requested for.
    // The encoded query is from the Query Parameter Associations. Group by category.

    var gaUserNeedItCount = new GlideAggregate('x_58872_needit_needit');
    gaUserNeedItCount.addAggregate('COUNT');
    gaUserNeedItCount.addQuery('u_requested_for', oRequestedUserName.sys_id);
    gaUserNeedItCount.addEncodedQuery(sRequestNeedItQuery);
    gaUserNeedItCount.groupBy('u_request_type');
    gaUserNeedItCount.query();

    var iNeedItRecords = 0;
    var aNiUserRecords = [];
    var iNeedItRecordsCount = 0;

    while (gaUserNeedItCount.next()) {
        iNeedItRecords = gaUserNeedItCount.getAggregate('COUNT');
        var sRequestType = gaUserNeedItCount.u_request_type.getDisplayValue();
        aNiUserRecords.push({
            'requestType': sRequestType,
            'count': iNeedItRecords
        });
        iNeedItRecordsCount = parseInt(iNeedItRecordsCount) + parseInt(iNeedItRecords);
    }

    // create a body object. Add property value pairs to the body.
    var oBody = {
        totalUserNIRecs: iNeedItRecordsCount,
        catCounts: aNiUserRecords,
        user: {
            'User name': oRequestedUserName.user_name,
            'User ID': oRequestedUserName.sys_id,
        },
    };

    // send the response object, which is returned to the requestor, to the body object
    response.setBody(oBody);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v1/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-14 09:48:12</sys_created_on>
        <sys_id>76270da9db450110c2ee1c970596197a</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>ni_getinfo</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_76270da9db450110c2ee1c970596197a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-01-14 13:16:30</sys_updated_on>
        <web_service_definition display_value="NeedIt API">630f8d1ddb450110c2ee1c970596191d</web_service_definition>
        <web_service_version display_value="v1">3b56bda1db090110c2ee1c97059619c8</web_service_version>
    </sys_ws_operation>
</record_update>
